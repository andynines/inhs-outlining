TODOS FOR THIS WEEK
Fix data augmentation!!! Current method is totally wrong and you just now realized it.
Write setup.bat and setup.sh scripts.
GitHub cleanup stuff. Does this belong with all the Drexel metadata stuff?

NOTES ON THESIS PAPER
The outline is one of many features
The why: trait extraction is a major problem in itself for BGNN, and we need outlines along with many other traits.

METHODS/DETAILS WE ARE DECIDEDLY NOT INTERESTED IN
Zahn-Roskies shape functions
Eigenshapes
Outlining using edge detection. We just can't seem to get a closed contour using Canny and the like.
Adapting this pipeline to other image repositories; I just don't have the time, but someone else might.
Restricted Boltzmann Machines as a classifier, as well as any model that can't offer a confidence with its choice
Visualizing standard deviation of shapes in terms of EFDs (rather than point XYs) - the results are just meaningless.

GENERAL INTERESTING THINGS TO REMEMBER
The curse of dimensionality - as dimensions increase, everything becomes equidistant! Especially when the number of samples is less than the number of features.
Ground truth errors? automated methods to detect them
Voronoi diagrams
Wavelet fourier descriptors? Just something I've read
Landmarks? What defines one?
Discontinuities in curvature, e.g. the tip of a shark's back fin, could help us compute the potentially feature of distance between extremal points / landmarks
Remember to properly cite all libraries used, like PyEFD and Sklearn and Python-DTW
A nearest centroid classifier actually did a lot better (75% acc) than a KNN (50% acc) out of the box.
When you normalize EFDs, the first three coefficients will always be 1, 0, 0. So you can remove them from a feature matrix.
Most high-harmonic fish do genuinely need that many to reconstruct within tolerance. But several are actually screwed up.
Data standardization just doesn't seem to do anything so long as I'm using LDA. (And it's proper to apply standardization before LDA)
You can do model persistence with joblib (same api as pickle, just need to pip install it)
Besides our current error metric, cosine similarity is another means of quantifying outline similarity
Everything runs way faster on the lab server! Just do all the work there that you can, especially ML stuff.

OLD BRAINSTORM ARTIFACTS FROM OUTLINE EXTRACTION DISCUSSIONS

Alternatively, a level set evolution with a velocity proportional to distances?
As a boundary pixel, look at your non-boundary, non-interior neighbors. "exterior", background pixel
If this distance is below a certain threshold, then the exterior pixel becomes the new boundary
A more iterative process based on an initial guess
Oh, and we'd also want to look at interior neighbors because you could be over-segmenting

To compute curvature on a chain code, hit it with a gaussian filter to blur it, turn it into grayscale, and then compute iso line curvatures on that grayscale image using preexisting formulas
What's the right spatial resolution where there's distinguishing qualities of the fish's curvature?

1. extracting outline
2. computing curvature -> initial "signal" that we could use
https://arxiv.org/pdf/1407.7340.pdf
https://math.mit.edu/classes/18.086/2007/levelsetnotes.pdf

key phrase: level set method / level set curvature
equation 4 in his given paper to compute curvatures of gaussian-blurred version of jagged binary image

We have the segmentation boundary so at any point we know in what general direction "out" is

Notion of uniform tension of a string wrapped around the fish
Breen looked into something like it a long time ago (see paper) but probably over-complex
https://ieeexplore.ieee.org/document/146367
